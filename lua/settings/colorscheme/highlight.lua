-- module
local M = {}

M.setup = function(c, opts)
    local groups = {
        Normal = { fg = c.white, bg = c.base2 },
        NormalFloat = { bg = c.base1 },
        Pmenu = { fg = c.white, bg = c.base3 },
        PmenuSel = { fg = c.base4, bg = c.orange },
        PmenuSelBold = { fg = c.base4, bg = c.orange },
        PmenuThumb = { fg = c.purple, bg = c.green },
        PmenuSbar = { bg = c.base3 },
        Cursor = { reverse = true },
        ColorColumn = { bg = c.base3 },
        CursorLine = { bg = c.base3 },
        NonText = { fg = c.base5 },
        Visual = { bg = c.base4 },
        VisualNOS = { bg = c.base3 },
        Search = { fg = c.base2, bg = c.yellow },
        IncSearch = { fg = c.base2, bg = c.orange },
        CursorLineNr = { fg = c.orange, bg = c.base2 },
        MatchParen = { fg = c.pink },
        Question = { fg = c.yellow },
        ModeMsg = { fg = c.white, bold = true },
        MoreMsg = { fg = c.white, bold = true },
        ErrorMsg = { fg = c.red, bold = true },
        WarningMsg = { fg = c.yellow, bold = true },
        VertSplit = { fg = c.brown },
        LineNr = { fg = c.base5, bg = c.base2 },
        SignColumn = { fg = c.white, bg = c.base2 },
        StatusLine = { fg = c.base7, bg = c.base3 },
        StatusLineNC = { fg = c.grey, bg = c.base3 },
        Tabline = {},
        TabLineFill = {},
        TabLineSel = { bg = c.base4 },
        SpellBad = { fg = c.red, undercurl = true },
        SpellCap = { fg = c.purple, undercurl = true },
        SpellRare = { fg = c.aqua, undercurl = true },
        SpellLocal = { fg = c.pink, undercurl = true },
        SpecialKey = { fg = c.pink },
        Title = { fg = c.yellow, bold = true },
        Directory = { fg = c.aqua },
        DiffAdd = { bg = c.diff_add },
        DiffDelete = { bg = c.diff_remove },
        DiffChange = { bg = c.diff_change },
        DiffText = { bg = c.diff_text },
        diffAdded = { fg = c.green },
        diffRemoved = { fg = c.pink },
        Folded = { fg = c.grey, bg = c.base3 },
        FoldColumn = { fg = c.white, bg = c.black },
        Constant = { fg = c.aqua },
        Number = { fg = c.purple },
        Float = { fg = c.purple },
        Boolean = { fg = c.purple },
        Character = { fg = c.yellow },
        String = { fg = c.yellow },
        Type = { fg = c.aqua },
        Structure = { fg = c.aqua },
        StorageClass = { fg = c.aqua },
        Typedef = { fg = c.aqua },
        Identifier = { fg = c.white },
        Function = { fg = c.green, italic = true },
        Statement = { fg = c.pink },
        Operator = { fg = c.pink },
        Label = { fg = c.pink },
        Keyword = { fg = c.pink, italic = true },
        PreProc = { fg = c.green },
        Include = { fg = c.pink, italic = true },
        Define = { fg = c.pink },
        Macro = { fg = c.pink },
        PreCondit = { fg = c.pink },
        Special = { fg = c.white },
        SpecialChar = { fg = c.pink },
        Delimiter = { fg = c.white },
        SpecialComment = { fg = c.grey, italic = true },
        Tag = { fg = c.orange },
        Todo = { fg = c.orange },
        Comment = { fg = c.base6, italic = true },
        Underlined = { underline = true },
        Ignore = {},
        Error = { fg = c.red },
        Terminal = { fg = c.white, bg = c.base2 },
        EndOfBuffer = { fg = c.base2 },
        Conceal = { fg = c.grey },
        vCursor = { reverse = true },
        iCursor = { reverse = true },
        lCursor = { reverse = true },
        CursorIM = { reverse = true },
        CursorColumn = { bg = c.base3 },
        Whitespace = { fg = c.base5 },
        WildMenu = { fg = c.white, bg = c.orange },
        QuickFixLine = { fg = c.purple, bold = true },
        Debug = { fg = c.orange },
        debugBreakpoint = { fg = c.base2, bg = c.red },
        Conditional = { fg = c.pink },
        Repeat = { fg = c.pink },
        Exception = { fg = c.pink },

        ['@annotation'] = { fg = c.green },
        ['@attribute'] = { fg = c.green },
        ['@boolean'] = { fg = c.purple },
        ['@character'] = { fg = c.yellow },
        ['@character.special'] = { fg = c.purple },
        ['@comment'] = { fg = c.base6, italic = true },
        ['@conceal'] = { fg = c.grey },
        ['@conditional'] = { fg = c.pink },
        ['@conditional.ternary'] = { fg = c.pink },
        ['@constant'] = { fg = c.aqua },
        ['@constant.builtin'] = { fg = c.purple },
        ['@constant.macro'] = { fg = c.purple },
        ['@constructor'] = { fg = c.aqua },
        ['@debug'] = { fg = c.pink },
        ['@define'] = { fg = c.aqua },
        ['@definition'] = { fg = c.green },
        ['@definition.associated'] = { fg = c.green },
        ['@definition.constant'] = { fg = c.green },
        ['@definition.enum'] = { fg = c.green },
        ['@definition.field'] = { fg = c.green },
        ['@definition.function'] = { fg = c.green },
        ['@definition.import'] = { fg = c.white },
        ['@definition.macro'] = { fg = c.green },
        ['@definition.method'] = { fg = c.green },
        ['@definition.namespace'] = { fg = c.white },
        ['@definition.parameter'] = { fg = c.orange },
        ['@definition.type'] = { fg = c.green },
        ['@definition.var'] = { fg = c.green },
        ['@error'] = { fg = c.red },
        ['@exception'] = { fg = c.pink },
        ['@field'] = { fg = c.white },
        ['@float'] = { fg = c.purple },
        ['@function'] = { fg = c.green, italic = true },
        ['@function.builtin'] = { fg = c.aqua },
        ['@function.call'] = { fg = c.green },
        ['@function.macro'] = { fg = c.green, italic = true },
        ['@include'] = { fg = c.pink, italic = true },
        ['@keyword'] = { fg = c.pink, italic = true },
        ['@keyword.function'] = { fg = c.pink, italic = true },
        ['@keyword.operator'] = { fg = c.pink },
        ['@keyword.return'] = { fg = c.pink },
        ['@label'] = { fg = c.pink },
        ['@math'] = { fg = c.yellow },
        ['@method'] = { fg = c.green },
        ['@method.call'] = { fg = c.green },
        ['@namespace'] = { fg = c.purple },
        -- ["@nospell"] = {},
        ['@number'] = { fg = c.purple },
        ['@operator'] = { fg = c.pink },
        ['@parameter'] = { fg = c.orange },
        ['@parameter.reference'] = { fg = c.white },
        ['@preproc'] = { fg = c.green },
        ['@property'] = { fg = c.white },
        ['@punctuation.bracket'] = { fg = c.white },
        ['@punctuation.delimiter'] = { fg = c.white },
        ['@punctuation.special'] = { fg = c.pink },
        ['@reference'] = { fg = c.white },
        ['@repeat'] = { fg = c.pink },
        ['@scope'] = { fg = c.white },
        -- ["@spell"] = {},
        ['@storageclass'] = { fg = c.aqua },
        ['@storageclass.lifetime'] = { fg = c.aqua },
        ['@strike'] = { fg = c.grey },
        ['@string'] = { fg = c.yellow },
        ['@string.escape'] = { fg = c.purple },
        ['@string.regex'] = { fg = c.purple },
        ['@string.special'] = { fg = c.purple },
        ['@symbol'] = { fg = c.purple },
        ['@tag'] = { fg = c.pink },
        ['@tag.attribute'] = { fg = c.green },
        ['@tag.delimiter'] = { fg = c.white },
        ['@text'] = { fg = c.green },
        ['@text.danger'] = { fg = c.red, bold = true },
        ['@text.diff.add'] = { fg = c.diff_add },
        ['@text.diff.delete'] = { fg = c.diff_remove },
        ['@text.emphasis'] = { bold = true },
        ['@text.environment'] = { fg = c.purple },
        ['@text.environment.name'] = { fg = c.aqua },
        ['@text.literal'] = { fg = c.yellow },
        ['@text.math'] = { link = '@math' },
        ['@text.note'] = { fg = c.aqua, bold = true },
        ['@text.quote'] = { fg = c.grey },
        ['@text.reference'] = { fg = c.orange, italic = true },
        ['@text.strike'] = { link = '@strike' },
        ['@text.strong'] = { bold = true },
        ['@text.title'] = { fg = c.yellow, bold = true },
        ['@text.todo'] = { link = '@todo' },
        ['@text.underline'] = { underline = true },
        ['@text.uri'] = { link = '@uri' },
        ['@text.warning'] = { fg = c.yellow, bold = true },
        ['@todo'] = { fg = c.aqua },
        ['@type'] = { fg = c.aqua },
        ['@type.builtin'] = { fg = c.aqua },
        ['@type.definition'] = { fg = c.aqua },
        ['@type.qualifier'] = { fg = c.pink },
        ['@uri'] = { fg = c.aqua, underline = true },
        ['@variable'] = { fg = c.white },
        ['@variable.builtin'] = { fg = c.orange },
        dbui_tables = { fg = c.white },
        DiagnosticSignError = { fg = c.red },
        DiagnosticSignWarn = { fg = c.yellow },
        DiagnosticSignInfo = { fg = c.white },
        DiagnosticSignHint = { fg = c.aqua },
        DiagnosticVirtualTextError = { fg = c.red },
        DiagnosticVirtualTextWarn = { fg = c.yellow },
        DiagnosticVirtualTextInfo = { fg = c.white },
        DiagnosticVirtualTextHint = { fg = c.aqua },
        DiagnosticUnderlineError = { undercurl = true, sp = c.red },
        DiagnosticUnderlineWarn = { undercurl = true, sp = c.yellow },
        DiagnosticUnderlineInfo = { undercurl = true, sp = c.white },
        DiagnosticUnderlineHint = { undercurl = true, sp = c.aqua },
        CursorWord0 = { bg = c.white, fg = c.black },
        CursorWord1 = { bg = c.white, fg = c.black },
        NvimTreeFolderName = { fg = c.white },
        NvimTreeRootFolder = { fg = c.pink },
        NvimTreeSpecialFile = { fg = c.white },
        -- Telescope
        TelescopeBorder = { fg = c.base7 },
        TelescopeNormal = { fg = c.base8, bg = c.base0 },
        TelescopeSelection = { fg = c.white, bold = true },
        TelescopeSelectionCaret = { fg = c.green },
        TelescopeMultiSelection = { fg = c.pink },
        TelescopeMatching = { fg = c.aqua },
        -- hrsh7th/nvim-cmp
        CmpDocumentation = { fg = c.white, bg = c.base1 },
        CmpDocumentationBorder = { fg = c.white, bg = c.base1 },
        CmpItemAbbr = { fg = c.white },
        CmpItemAbbrMatch = { fg = c.aqua },
        CmpItemAbbrMatchFuzzy = { fg = c.aqua },
        CmpItemKindDefault = { fg = c.white },
        CmpItemMenu = { fg = c.base6 },
        CmpItemKindKeyword = { fg = c.pink },
        CmpItemKindVariable = { fg = c.pink },
        CmpItemKindConstant = { fg = c.pink },
        CmpItemKindReference = { fg = c.pink },
        CmpItemKindValue = { fg = c.pink },
        CmpItemKindFunction = { fg = c.aqua },
        CmpItemKindMethod = { fg = c.aqua },
        CmpItemKindConstructor = { fg = c.aqua },
        CmpItemKindClass = { fg = c.orange },
        CmpItemKindInterface = { fg = c.orange },
        CmpItemKindStruct = { fg = c.orange },
        CmpItemKindEvent = { fg = c.orange },
        CmpItemKindEnum = { fg = c.orange },
        CmpItemKindUnit = { fg = c.orange },
        CmpItemKindModule = { fg = c.yellow },
        CmpItemKindProperty = { fg = c.green },
        CmpItemKindField = { fg = c.green },
        CmpItemKindTypeParameter = { fg = c.green },
        CmpItemKindEnumMember = { fg = c.green },
        CmpItemKindOperator = { fg = c.green },
        -- ray-x/lsp_signature.nvim
        LspSignatureActiveParameter = { fg = c.orange },
    }

    -- filter style
    if opts.italic == false then
        for _, g in pairs(groups) do
            g.italic = nil
        end
    end

    -- set hl groups
    for name, val in pairs(groups) do
        vim.api.nvim_set_hl(0, name, val)
    end
end

return M
