-- default theme
--vim.cmd('colorscheme FourSeasons-Winter')

-- module
local M = {}

M.setup = function(c)
    local groups = {
        Normal = { fg = c.white, bg = c.base2, },
        NormalFloat = { bg = c.base1, },
        Pmenu = { fg = c.white, bg = c.base3, },
        PmenuSel = { fg = c.base4, bg = c.orange, },
        PmenuSelBold = { fg = c.base4, bg = c.orange, },
        PmenuThumb = { fg = c.purple, bg = c.green, },
        PmenuSbar = { bg = c.base3, },
        Cursor = { reverse = true, },
        ColorColumn = { bg = c.base3, },
        CursorLine = { bg = c.base3, },
        NonText = { fg = c.base5, },
        Visual = { bg = c.base4, },
        VisualNOS = { bg = c.base3, },
        Search = { fg = c.base2, bg = c.yellow, },
        IncSearch = { fg = c.base2, bg = c.orange, },
        CursorLineNr = { fg = c.orange, bg = c.base2, },
        MatchParen = { fg = c.pink, },
        Question = { fg = c.yellow, },
        ModeMsg = { fg = c.white, bold = true },
        MoreMsg = { fg = c.white, bold = true, },
        ErrorMsg = { fg = c.red, bold = true, },
        WarningMsg = { fg = c.yellow, bold = true, },
        VertSplit = { fg = c.brown, },
        LineNr = { fg = c.base5, bg = c.base2, },
        SignColumn = { fg = c.white, bg = c.base2, },
        StatusLine = { fg = c.base7, bg = c.base3, },
        StatusLineNC = { fg = c.grey, bg = c.base3, },
        Tabline = {},
        TabLineFill = {},
        TabLineSel = { bg = c.base4, },
        SpellBad = { fg = c.red, undercurl = true, },
        SpellCap = { fg = c.purple, undercurl = true, },
        SpellRare = { fg = c.aqua, undercurl = true, },
        SpellLocal = { fg = c.pink, undercurl = true, },
        SpecialKey = { fg = c.pink, },
        Title = { fg = c.yellow, bold = true, },
        Directory = { fg = c.aqua, },
        DiffAdd = { bg = c.diff_add, },
        DiffDelete = { bg = c.diff_remove, },
        DiffChange = { bg = c.diff_change, },
        DiffText = { bg = c.diff_text, },
        diffAdded = { fg = c.green, },
        diffRemoved = { fg = c.pink, },
        Folded = { fg = c.grey, bg = c.base3, },
        FoldColumn = { fg = c.white, bg = c.black, },
        Constant = { fg = c.aqua, },
        Number = { fg = c.purple, },
        Float = { fg = c.purple, },
        Boolean = { fg = c.purple, },
        Character = { fg = c.yellow, },
        String = { fg = c.yellow, },
        Type = { fg = c.aqua, },
        Structure = { fg = c.aqua, },
        StorageClass = { fg = c.aqua, },
        Typedef = { fg = c.aqua, },
        Identifier = { fg = c.white, },
        Function = { fg = c.green, italic = true, },
        Statement = { fg = c.pink, },
        Operator = { fg = c.pink, },
        Label = { fg = c.pink, },
        Keyword = { fg = c.pink, italic = true, },
        PreProc = { fg = c.green, },
        Include = { fg = c.pink, italic = true, },
        Define = { fg = c.pink, },
        Macro = { fg = c.pink, },
        PreCondit = { fg = c.pink, },
        Special = { fg = c.white, },
        SpecialChar = { fg = c.pink, },
        Delimiter = { fg = c.white, },
        SpecialComment = { fg = c.grey, italic = true, },
        Tag = { fg = c.orange, },
        Todo = { fg = c.orange, },
        Comment = { fg = c.base6, italic = true, },
        Underlined = { underline = true, },
        Ignore = {},
        Error = { fg = c.red, },
        Terminal = { fg = c.white, bg = c.base2, },
        EndOfBuffer = { fg = c.base2, },
        Conceal = { fg = c.grey, },
        vCursor = { reverse = true, },
        iCursor = { reverse = true, },
        lCursor = { reverse = true, },
        CursorIM = { reverse = true, },
        CursorColumn = { bg = c.base3, },
        Whitespace = { fg = c.base5, },
        WildMenu = { fg = c.white, bg = c.orange, },
        QuickFixLine = { fg = c.purple, bold = true, },
        Debug = { fg = c.orange, },
        debugBreakpoint = { fg = c.base2, bg = c.red, },
        Conditional = { fg = c.pink, },
        Repeat = { fg = c.pink, },
        Exception = { fg = c.pink, },
    }

    -- set hl groups
    for name, val in pairs(groups) do
        vim.api.nvim_set_hl(0, name, val)
    end
end

return M
